<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ReviewDAO">

	<resultMap id="reviewResult" type="review" >
		<id property="rev_id" column="REV_ID"/>
		<result property="rev_writer" column="REV_WRITER"/>
		<result property="rev_content" column="REV_CONTENT"/>
		<result property="rev_date" column="REV_DATE"/>
		<result property="rev_show" column="REV_SHOW"/>
		<result property="rev_like_cnt" column="REV_LIKE_CNT"/>
		<result property="rev_stars" column="REV_STARS"/>
		<result property="rev_f_img" column="REV_F_IMG"/>
		<result property="rev_thumb_img" column="REV_THUMB_IMG"/>
		<result property="member_id" column="MEMBER_ID"/>
		<result property="product_id" column="PRODUCT_ID"/>
	</resultMap>
	
	<!-- 후기 등록 -->
	<insert id="insertReview" parameterType="review">
	<![CDATA[
		 INSERT INTO REVIEW 
		 (
		 REV_ID,
		 REV_WRITER,
		 REV_CONTENT,
		 REV_STARS,
		 REV_F_IMG,
		 REV_THUMB_IMG,
		 MEMBER_ID,
		 PRODUCT_ID
		 ) 
		 VALUES (
			 (SELECT NVL(MAX(REV_ID),0)+1 FROM REVIEW), 
			 #{rev_writer},
			 #{rev_content},
			 #{rev_stars},
			 #{rev_f_img},
			 #{rev_thumb_img},
			 #{member_id},
			 #{product_id}
		 )
	]]>
	</insert>
	
	<!-- 후기 목록 -->
	<select id="getReviews" resultType="review">
	<![CDATA[
		SELECT *
		FROM REVIEW
		WHERE PRODUCT_ID = #{product_id}
		ORDER BY REV_ID DESC
	]]>
	</select>
	
	<!-- 후기 삭제 -->
	<delete id="deleteReview">
	<![CDATA[
		DELETE REVIEW
		WHERE REV_ID = #{rev_id}
	]]>
	</delete>
	
	<!-- 상품 평균 별점 -->
	<update id="getAvgStars" parameterType="int">
		UPDATE PRODUCT
		SET REV_AVG_STARS =  (SELECT (TRUNC((AVG(REV_STARS)-0.1)*2)/2+0.5) FROM REVIEW WHERE PRODUCT_ID = #{product_id})
		WHERE PRODUCT_ID = #{product_id}
	</update>
	
	<!-- 후기 좋아요 생성 -->
	<insert id="insertReviewLike">
	<![CDATA[
		INSERT INTO REV_LIKE (REV_LIKE_ID, REV_ID, MEMBER_ID)
       	VALUES (
               (SELECT NVL(MAX(REV_LIKE_ID),0)+1 FROM REV_LIKE),
                #{rev_id}, 
                #{member_id}
                )
	]]>
	</insert>
	
	<!-- 후기 좋아요 삭제 -->
	<delete id="deleteReviewLike">
	<![CDATA[
		DELETE FROM REV_LIKE
         WHERE REV_ID = #{rev_id} AND MEMBER_ID = #{member_id}
	]]>
	</delete>
	
	<!-- 후기 좋아요 업데이트 -->
	<update id="updateReviewLike">
	<![CDATA[
		UPDATE REVIEW
	        SET REV_LIKE_CNT = (
	        SELECT COUNT(*)
	        FROM REV_LIKE
	        WHERE REV_ID = #{rev_id})
	        WHERE REV_ID = #{rev_id}
	]]>
	</update>
	
	<!-- 후기 좋아요 개수 구하기 // ID 중복 방지용  -->
	<select id="getReviewLike" resultType="int" parameterType="reviewLike">
		SELECT COUNT(REV_LIKE_ID)
	    	FROM REV_LIKE
			WHERE REV_ID = #{rev_id} AND MEMBER_ID = #{member_id}
	</select>
	
	<!-- 후기 좋아요 총 개수 구하기 -->
	<select id="getReviewLikeTotal" resultType="int" parameterType="reviewLike">
		SELECT COUNT(REV_LIKE_ID)
	    	FROM REV_LIKE
			WHERE REV_ID = #{rev_id}
	</select>
 
</mapper>
